void setup() {

 Serial.begin(9600);// Initialize serial communication  // set up Serial library at 9600 bps
  
  
  PgmPrintln("Pi speaker");
  
  if (!card.init()) {
    error("Card init. failed!");
  }
  if (!vol.init(card)) {
    error("No partition!");
  }
  if (!root.openRoot(vol)) {
    error("Couldn't open dir");
  }

  PgmPrintln("Files found:");
  root.ls();
}
void loop() {  
   Serial.println(Tdetect());  
}



int Ldetect(){
    int light;
    light = analogRead(lightPin);//read the data from potpin which
                          //connected to Photoresistors
    return light;
  
}



int Tdetect(){
  int reading; //raw reading from A1 
  float volts;//Voltage output number 
  float celsius; //celsius output number
   reading = analogRead(A1); //read A1
   volts = reading/1023.0 * 5.0;
   celsius=volts*100.0-50; 
   return celsius;
}




int Sdetect(){
   int tempValue = 0; // variable to temporarly store moisture value 
   for (int a = 0; a < 10; a++) { 
     tempValue += analogRead(moisturePin); 
     delay(100); 
   } 
   return tempValue / 10; 
}













///////////PLAY PART/////////////

void error_P(const char *str) {
  PgmPrint("Error: ");
  SerialPrint_P(str);
  sdErrorCheck();
  while(1);
}

void playcomplete(char *name) {
  playfile(name);
  while (wave.isplaying);
  
  // see if an error occurred while playing
  sdErrorCheck();
}
/*
 * Open and start playing a WAV file
 */
void playfile(char *name) {
  if (wave.isplaying) {// already playing something, so stop it!
    wave.stop(); // stop it
  }
  if (!file.open(root, name)) {
    PgmPrint("Couldn't open file ");
    Serial.print(name); 
    return;
  }
  if (!wave.create(file)) {
    PgmPrintln("Not a valid WAV");
    return;
  }
  // ok time to play!
  wave.play();
}

//this part is for playing numbers;
char ten[6];
char one[6];
void numberSp(int i)
{
  if (i<0)
  {
    playcomplete("minus.wav");
    i=-i;
  }
  int tens = i/10;
  int ones = i - tens*10;
  char t = char(tens);
  char o = char(ones);
  if(tens != 0)
  {
    strcpy_P(ten, PSTR("00.WAV"));
    ten[0]=t;
    playcomplete(ten);
  }
  strcpy_P(one, PSTR("0.WAV"));
  one[0]=o;
  playcomplete(one);
}

void sdErrorCheck(void) {
  if (!card.errorCode()) return;
  PgmPrint("\r\nSD I/O error: ");
  Serial.print(card.errorCode(), HEX);
  PgmPrint(", ");
  Serial.println(card.errorData(), HEX);
  while(1);
}
